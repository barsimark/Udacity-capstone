app: udacity-board-app-2
console: true
org: markdevvv
service: udacity-board-app-2

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  logs:
    restApi: true

  tracing:
    lambda: true
    apiGateway: true

  environment:
    POSTS_TABLE: Posts
    ATTACHMENTS_S3_BUCKET: udacity-serverless-mark-attachments-${self:provider.stage}
    SIGNED_URL_EXP: 300

functions:
  GetPosts:
    handler: src/lambda/http/getPosts.handler
    events:
      - http:
          method: get
          path: group/{groupId}/posts
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POSTS_TABLE}  

  CreatePost:
    handler: src/lambda/http/createPost.handler
    events:
      - http:
          method: post
          path: group/{groupId}/posts
          request:
            schemas:
              application/json: ${file(src/models/createpostrequest.json)}
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POSTS_TABLE}  

  UpdatePost:
    handler: src/lambda/http/updatePost.handler
    events:
      - http:
          method: patch
          path: group/{groupId}/posts/{postId}
          cors: true
          request:
            schemas:
              application/json: ${file(src/models/updatepostrequest.json)}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POSTS_TABLE} 

  DeletePost:
    handler: src/lambda/http/deletePost.handler
    events:
      - http:
          method: delete
          path: group/{groupId}/posts/{postId}
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POSTS_TABLE}  

  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: group/{groupId}/posts/{postId}/attachment
          cors: true
    iamRoleStatements:
      - Effect: "Allow"
        Action: 
          - s3:PutObject
          - s3:GetObject  
        Resource: arn:aws:s3:::${self:provider.environment.ATTACHMENTS_S3_BUCKET}/*
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POSTS_TABLE}  

resources:
  Resources:
    PostsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: groupId
            AttributeType: S
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: groupId
            KeyType: HASH
          - AttributeName: postId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.POSTS_TABLE}

    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.ATTACHMENTS_S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
              
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: AttachPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: 'arn:aws:s3:::${self:provider.environment.ATTACHMENTS_S3_BUCKET}/*'
        Bucket: !Ref AttachmentsBucket

